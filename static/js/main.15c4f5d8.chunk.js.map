{"version":3,"sources":["components/ToDoList/ToDoItem.module.css","UI/button/Button.module.css","components/ToDo/ToDo.module.css","components/ToDoList/ToDoList.module.css","components/Auth/Auth.module.css","UI/button/Button.js","components/ToDoList/ToDoItem.js","components/ToDoList/ToDoList.js","components/ToDo/ToDo.js","context/auth-context.js","components/Auth/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","Fragment","className","classes","btnType","join","onClick","onButtonHandler","children","ToDoItem","toDoItem","left","FormGroup","FormControlLabel","control","Switch","checked","completed","onChange","markCompleted","value","color","middle","right","onRemoveItems","ToDoList","console","log","toDoItems","toDoList","map","index","isCompleted","bind","id","markComplete","ToDo","useState","inputValue","setInputValue","toDoData","setToDoData","markCompleteHandler","useCallback","currentData","filter","item","mainData","slice","updatedData","todo","placeholder","event","target","style","margin","width","length","updatedItems","push","prevItems","AuthContext","React","createContext","isAuth","login","AuthProvider","authenticated","setAutheticated","Provider","Auth","authContext","useContext","auth","App","content","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15c4f5d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoItem\":\"ToDoItem_toDoItem__3DQSZ\",\"slider\":\"ToDoItem_slider__1Sh6i\",\"left\":\"ToDoItem_left__3XgXJ\",\"middle\":\"ToDoItem_middle__1ij5S\",\"right\":\"ToDoItem_right__cVkhF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__fnOQZ\",\"Success\":\"Button_Success__2IxE7\",\"Danger\":\"Button_Danger__2smj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"ToDo_todo__2mE2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoList\":\"ToDoList_toDoList__19U00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__2IeyV\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className={[classes.Button,classes[props.btnType]].join(\" \")} onClick={props.onButtonHandler}>\r\n        {props.children}\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classes from \"./ToDoItem.module.css\";\r\nimport Button from \"../../UI/button/Button\";\r\n//import Checkbox from \"../../UI/checkbox/Checkbox\";\r\n// import { Checkbox } from \"pretty-checkbox-react\";\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst ToDoItem = (props) => {\r\n  return (\r\n    <div className={classes.toDoItem}>\r\n      <div className={classes.left}>\r\n        {/* <Checkbox\r\n          completed={props.completed}\r\n          markCompleted={props.markCompleted}\r\n        /> */}\r\n        {/* <Checkbox checked={props.completed} onChange={props.markCompleted} /> */}\r\n        <FormGroup>\r\n          <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={props.completed}\r\n                onChange={props.markCompleted}\r\n                value=\"\"\r\n                color=\"\"\r\n              />\r\n            }\r\n            //  label=\"Completed\"\r\n          />\r\n        </FormGroup>\r\n        {/* <input\r\n          type=\"checkbox\"\r\n          checked={props.completed}\r\n          onChange={props.markCompleted}\r\n        /> */}\r\n      </div>\r\n      <div className={classes.middle}>{props.children}</div>\r\n      <div className={classes.right}>\r\n        <Button onButtonHandler={props.onRemoveItems} btnType=\"Danger\">\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport classes from \"./ToDoList.module.css\";\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nconst ToDoList = (props) => {\r\n  console.log(props.toDoItems);\r\n  return (\r\n    <div className={classes.toDoList}>\r\n      {props.toDoItems.map((toDoItem,index) => (\r\n        <ToDoItem\r\n          key={toDoItem.id}\r\n          completed={toDoItem.isCompleted}\r\n          onRemoveItems={props.onRemoveItems.bind(this, toDoItem.id)}\r\n          markCompleted={props.markComplete.bind(this,toDoItem.id,index)}\r\n        >\r\n          {toDoItem.value}\r\n        </ToDoItem>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React, { useState, useCallback, useContext } from \"react\";\r\nimport classes from \"./ToDo.module.css\";\r\nimport Button from \"../../UI/button/Button\";\r\nimport ToDoList from \"../ToDoList/ToDoList\";\r\n\r\nconst ToDo = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [toDoData, setToDoData] = useState([]);\r\n\r\n  const buttonHandler = () => {\r\n    if (inputValue.length !== 0) {\r\n      const updatedItems = [];\r\n      updatedItems.push({\r\n        id: inputValue,\r\n        value: inputValue,\r\n        isCompleted: false,\r\n      });\r\n      setToDoData((prevItems) => [...prevItems, ...updatedItems]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const removeItemHandler = (id) => {\r\n    const updatedData = toDoData.filter((item) => item.id !== id);\r\n    setToDoData(updatedData);\r\n  };\r\n\r\n  const markCompleteHandler = useCallback(\r\n    (id, index) => {\r\n      const currentData = toDoData.filter((item) => item.id === id);\r\n      if (currentData[0].isCompleted === false) {\r\n        console.log(\"clicked\", id);\r\n        const mainData = toDoData.slice();\r\n        const updatedData = { ...currentData[0], isCompleted: true };\r\n        mainData[index] = { ...updatedData };\r\n        setToDoData(mainData);\r\n      }\r\n    },\r\n    [setToDoData, toDoData]\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.todo}>\r\n        <h1>TODO APP</h1>\r\n\r\n        <input\r\n          value={inputValue}\r\n          placeholder={\"Please enter your task to be done\"}\r\n          onChange={(event) => setInputValue(event.target.value)}\r\n        ></input>\r\n\r\n        <div style={{ margin: \"auto\", width: \"10%\" }}>\r\n          <Button onButtonHandler={buttonHandler} btnType=\"Success\">\r\n            ADD\r\n          </Button>\r\n        </div>\r\n        <ToDoList\r\n          toDoItems={toDoData}\r\n          onRemoveItems={removeItemHandler}\r\n          markComplete={markCompleteHandler}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import React, { useState } from \"react\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  isAuth: false,\r\n  login: () => {},\r\n});\r\n\r\nconst AuthProvider = (props) => {\r\n  const [authenticated, setAutheticated] = useState(false);\r\n\r\n  const loginHandler = () => {\r\n    setAutheticated(true);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{isAuth : authenticated, login : loginHandler}}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\nimport Button from \"../../UI/button/Button\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst Auth = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const buttonHandler = () => {\r\n    authContext.login();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.auth}>\r\n      <h2>You are not authenticated!</h2>\r\n      <p>Please log in to continue.</p>\r\n      <Button btnType={\"Success\"} onButtonHandler={buttonHandler}>\r\n        LogIn\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport ToDo from \"./components/ToDo/ToDo\";\nimport { AuthContext } from \"./context/auth-context\";\nimport Auth from \"./components/Auth/Auth\";\n\n\nfunction App() {\n  const authContext = useContext(AuthContext);\n\n  let content = <Auth />;\n\n  if (authContext.isAuth) {\n    content = (\n      <React.Fragment>\n        <div className=\"App\">\n          <ToDo></ToDo>;\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return content;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AuthProvider from \"./context/auth-context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}