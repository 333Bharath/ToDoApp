{"version":3,"sources":["components/ToDoList/ToDoItem.module.css","UI/button/Button.module.css","components/ToDo/ToDo.module.css","components/ToDoList/ToDoList.module.css","UI/Modal/Modal.module.css","UI/Backdrop/Backdrop.module.css","components/Auth/Auth.module.css","UI/button/Button.js","components/ToDoList/ToDoItem.js","components/ToDoList/ToDoList.js","UI/Backdrop/Backdrop.js","UI/Modal/Modal.js","components/ToDo/ToDo.js","context/auth-context.js","components/Auth/Auth.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","Fragment","className","classes","btnType","join","onClick","onButtonHandler","children","PurpleSwitch","withStyles","switchBase","color","grey","green","backgroundColor","checked","track","Switch","ToDoItem","root","Checkbox","toDoItem","left","FormGroup","FormControlLabel","control","completed","onChange","markCompleted","name","label","middle","right","onRemoveItems","ToDoList","console","log","toDoItems","toDoList","map","index","isCompleted","bind","id","markComplete","value","Backdrop","content","show","clicked","Modal","closeModal","ToDo","useState","inputValue","setInputValue","toDoData","setToDoData","showModal","setShowModal","markCompleteHandler","useCallback","currentData","filter","item","mainData","slice","updatedData","openModal","todo","placeholder","event","target","style","margin","width","length","updatedItems","push","prevItems","AuthContext","React","createContext","isAuth","login","AuthProvider","authenticated","setAutheticated","Provider","Auth","authContext","useContext","auth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3c47f3c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoItem\":\"ToDoItem_toDoItem__3DQSZ\",\"slider\":\"ToDoItem_slider__1Sh6i\",\"left\":\"ToDoItem_left__3XgXJ\",\"middle\":\"ToDoItem_middle__1ij5S\",\"right\":\"ToDoItem_right__cVkhF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__fnOQZ\",\"Success\":\"Button_Success__2IxE7\",\"Danger\":\"Button_Danger__2smj_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"ToDo_todo__2mE2u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"toDoList\":\"ToDoList_toDoList__19U00\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2qVxW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__20E_G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"auth\":\"Auth_auth__2IeyV\"};","import React from \"react\";\r\nimport classes from \"./Button.module.css\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <button className={[classes.Button,classes[props.btnType]].join(\" \")} onClick={props.onButtonHandler}>\r\n        {props.children}\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport classes from \"./ToDoItem.module.css\";\r\nimport Button from \"../../UI/button/Button\";\r\n//import Checkbox from \"../../UI/checkbox/Checkbox\";\r\n// import { Checkbox } from \"pretty-checkbox-react\";\r\n\r\nimport { green,grey } from '@material-ui/core/colors';\r\nimport { Checkbox } from \"@material-ui/core\";\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\n\r\nconst PurpleSwitch = withStyles({\r\n  switchBase: {\r\n    color: grey[300],\r\n    '&$checked': {\r\n      color: green[500],\r\n    },\r\n    '&$checked + $track': {\r\n      backgroundColor: green[500],\r\n    },\r\n  },\r\n  checked: {},\r\n  track: {},\r\n})(Switch);\r\n\r\n\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n\r\n\r\nconst ToDoItem = (props) => {\r\n  return (\r\n    <div className={classes.toDoItem}>\r\n      <div className={classes.left}>\r\n        {/* <Checkbox\r\n          completed={props.completed}\r\n          markCompleted={props.markCompleted}\r\n        /> */}\r\n        {/* <Checkbox checked={props.completed} onChange={props.markCompleted} /> */}\r\n        <FormGroup>\r\n        <FormControlLabel\r\n        control={<PurpleSwitch checked={props.completed} \r\n        onChange={props.markCompleted} name=\"checkedA\" />}\r\n        label=\"\"\r\n      />\r\n          {/* <FormControlLabel\r\n            control={\r\n              <Switch\r\n                checked={props.completed}\r\n                onChange={props.markCompleted}\r\n                value=\"\"\r\n                color=\"\"\r\n              />\r\n            }\r\n            //  label=\"Completed\"\r\n          /> */}\r\n        {/* <FormControlLabel\r\n        control={<GreenCheckbox checked={props.completed}\r\n         onChange={props.markCompleted} name=\"\" />}\r\n        label=\"\"\r\n      /> */}\r\n        </FormGroup>\r\n        {/* <input\r\n          type=\"checkbox\"\r\n          checked={props.completed}\r\n          onChange={props.markCompleted}\r\n        /> */}\r\n      </div>\r\n      <div className={classes.middle}>{props.children}</div>\r\n      <div className={classes.right}>\r\n        <Button onButtonHandler={props.onRemoveItems} btnType=\"Danger\">\r\n          Delete\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoItem;\r\n","import React from \"react\";\r\nimport classes from \"./ToDoList.module.css\";\r\nimport ToDoItem from \"./ToDoItem\";\r\n\r\nconst ToDoList = (props) => {\r\n  console.log(props.toDoItems);\r\n  return (\r\n    <div className={classes.toDoList}>\r\n      {props.toDoItems.map((toDoItem,index) => (\r\n        <ToDoItem\r\n          key={toDoItem.id}\r\n          completed={toDoItem.isCompleted}\r\n          onRemoveItems={props.onRemoveItems.bind(this, toDoItem.id)}\r\n          markCompleted={props.markComplete.bind(this,toDoItem.id,index)}\r\n        >\r\n          {toDoItem.value}\r\n        </ToDoItem>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import React from \"react\";\r\nimport classes from \"./Backdrop.module.css\";\r\n\r\nconst Backdrop = (props) => {\r\n  let content = null;\r\n\r\n  if (props.show) {\r\n    content = <div className={classes.Backdrop} onClick={props.clicked}  ></div>;\r\n  }\r\n\r\n  return content;\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from \"react\";\r\nimport classes from \"./Modal.module.css\";\r\nimport Backdrop from \"../Backdrop/Backdrop\"\r\n\r\nconst Modal = (props) => {\r\n  return (\r\n    <React.Fragment>\r\n      <Backdrop show={props.show} clicked={props.closeModal} />\r\n      <div className={classes.Modal}>\r\n        <p>{props.children}</p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState, useCallback, useContext } from \"react\";\r\nimport classes from \"./ToDo.module.css\";\r\nimport Button from \"../../UI/button/Button\";\r\nimport ToDoList from \"../ToDoList/ToDoList\";\r\nimport Modal from \"../../UI/Modal/Modal\"\r\n\r\n\r\n\r\nconst ToDo = (props) => {\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n  const [toDoData, setToDoData] = useState([]);\r\n  const [showModal,setShowModal] = useState(false);\r\n\r\n  const buttonHandler = () => {\r\n    if (inputValue.length !== 0) {\r\n      const updatedItems = [];\r\n      updatedItems.push({\r\n        id: inputValue,\r\n        value: inputValue,\r\n        isCompleted: false,\r\n      });\r\n      setToDoData((prevItems) => [...prevItems, ...updatedItems]);\r\n      setInputValue(\"\");\r\n    }\r\n  };\r\n\r\n  const removeItemHandler = (id) => {\r\n    const updatedData = toDoData.filter((item) => item.id !== id);\r\n    setToDoData(updatedData);\r\n  };\r\n\r\n  const markCompleteHandler = useCallback(\r\n    (id, index) => {\r\n      const currentData = toDoData.filter((item) => item.id === id);\r\n      if (currentData[0].isCompleted === false) {\r\n        console.log(\"clicked\", id);\r\n        const mainData = toDoData.slice();\r\n        const updatedData = { ...currentData[0], isCompleted: true };\r\n        mainData[index] = { ...updatedData };\r\n        setToDoData(mainData);\r\n      }else{\r\n        openModal();\r\n      }\r\n    },\r\n    [setToDoData, toDoData]\r\n  );\r\n\r\n\r\n  const openModal=()=>{\r\n    setShowModal(true);\r\n  }\r\n\r\n  const closeModal=()=>{\r\n    setShowModal(false);\r\n  }\r\n  \r\n\r\n  return (\r\n    <React.Fragment>\r\n      {showModal?<Modal show={showModal} closeModal={closeModal}  >You have already completed this to-do!</Modal>:null}\r\n      <div className={classes.todo}>\r\n        <h1>TODO APP</h1>\r\n        <input\r\n          value={inputValue}\r\n          placeholder={\"Please enter your to-do\"}\r\n          onChange={(event) => setInputValue(event.target.value)}\r\n        ></input>\r\n\r\n        <div style={{ margin: \"auto\", width: \"10%\" }}>\r\n          <Button onButtonHandler={buttonHandler} btnType=\"Success\">\r\n            ADD\r\n          </Button>\r\n        </div>\r\n        <ToDoList\r\n          toDoItems={toDoData}\r\n          onRemoveItems={removeItemHandler}\r\n          markComplete={markCompleteHandler}\r\n        />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import React, { useState } from \"react\";\r\n\r\nexport const AuthContext = React.createContext({\r\n  isAuth: false,\r\n  login: () => {},\r\n});\r\n\r\nconst AuthProvider = (props) => {\r\n  const [authenticated, setAutheticated] = useState(false);\r\n\r\n  const loginHandler = () => {\r\n    setAutheticated(true);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{isAuth : authenticated, login : loginHandler}}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React, { useContext } from \"react\";\r\nimport classes from \"./Auth.module.css\";\r\nimport Button from \"../../UI/button/Button\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\n\r\nconst Auth = (props) => {\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const buttonHandler = () => {\r\n    authContext.login();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.auth}>\r\n      <h2>You are not authenticated!</h2>\r\n      <p>Please log in to continue.</p>\r\n      <Button btnType={\"Success\"} onButtonHandler={buttonHandler}>\r\n        LogIn\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React, { useContext } from \"react\";\nimport \"./App.css\";\nimport ToDo from \"./components/ToDo/ToDo\";\nimport { AuthContext } from \"./context/auth-context\";\nimport Auth from \"./components/Auth/Auth\";\n\n\nfunction App() {\n  const authContext = useContext(AuthContext);\n\n  let content = <Auth />;\n\n  if (authContext.isAuth) {\n    content = (\n      <React.Fragment>\n        <div className=\"App\">\n          <ToDo></ToDo>;\n        </div>\n      </React.Fragment>\n    );\n  }\n\n  return content;\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AuthProvider from \"./context/auth-context\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}